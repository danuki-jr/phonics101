{% block soundBox %}
  {% set count = count ?? 5 %}
  {% set color = color ?? 'random' %}
  {% set colorSet = ['red', 'green', 'orangered', 'blue', 'goldenrod'] %}
  {% if color == 'mixed' %}
    {% set colors = colorSet %}
  {% elseif color == 'random' %}
    {% set randColor = random(colorSet) %}
    {% set colors = [randColor, randColor, randColor, randColor, randColor] %}
  {% else %}
    {% set colors = [color, color, color, color, color] %}
  {% endif %}
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta name="generator"
          content="HTML Tidy for HTML5 (experimental) for Windows https://github.com/w3c/tidy-html5/tree/c63cc39"/>
    <title>Bootstrap Example</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <meta name="apple-mobile-web-app-status-bar-style" content="black"/>
    <meta name="apple-mobile-web-app-capable" content="yes"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <script src="https://kit.fontawesome.com/12c5ce46e9.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/css/bootstrap4-custom/bootstrap.css"/>
    <link rel="stylesheet" href="/css/phonics.css"/>

    <script src="/js/jquery-3.5.1.min.js"></script>

    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap4-custom/bootstrap.bundle.min.js"></script>

    <style>
        .box{
            border: 3px solid black;
            height: 60px;
            width: 60px
        }


        /*body {width: 360px; height: 380px}*/
    </style>

    <script>
        function dragPiece(ev) {
            ev.dataTransfer.setData("text/plain", ev.target.id);
        }

        function allowDrop(ev) {
            ev.preventDefault();
        }

        function dropOnSquare(ev) {
            ev.preventDefault();
            let data = ev.dataTransfer.getData("text");
            document.getElementById(data).setAttribute("draggable", "false");
            ev.target.innerText = "";
            ev.target.appendChild(document.getElementById(data));
            ev.target.setAttribute("ondrop", "");
            ev.target.setAttribute("ondragover", "");
            moves++;
            if (data.charAt(0) === "r") {
                rats[parseInt(ev.target.id)] = 1;
            } else {
                cats[parseInt(ev.target.id)] = 1;
            }
            setGameStatus();
            if (status.startsWith("WIN")) {
                winner();
            } else if (status === "DRAW") {
                noWinner();
            }
        }

    </script>
  </head>

  <body style="border: 2px solid grey" >
  <div id="game_container" class="container">
    <div class="row d-flex justify-content-center">
      <h1 class="my-2 col tac">Sound Boxes</h1>
    </div>
    {# Botton Row start #}
    <div class="row d-flex justify-content-center">

      {# The button to select the ball color #}
      <div class="btn-group my-3 mx-1 p-0 col">
        <button id="color-button" type="button" class="btn  btn-sm btn-primary dropdown-toggle"
                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Color</button>
        <div class="dropdown-menu" aria-labelledby="color-button">
          <a class="dropdown-item" href="#"><i class="fas fa-circle fa-2x" style="color:red"></i></a>
          <a class="dropdown-item" href="#"><i class="fas fa-circle fa-2x" style="color:green"></i> </a>
          <a class="dropdown-item" href="#"><i class="fas fa-circle fa-2x" style="color:orangered"></i> </a>
          <a class="dropdown-item" href="#"><i class="fas fa-circle fa-2x" style="color:blue"></i> </a>
          <a class="dropdown-item" href="#"><i class="fas fa-circle fa-2x" style="color:goldenrod"></i> </a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#">Multi-color</a>
        </div>
      </div>

      {# The button to select the number of balls #}
      <div class="btn-group  my-3 mx-1 p-0 col">
        <button id="count-button" type="button" class="btn btn-sm btn-primary dropdown-toggle"
                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Count</button>
        <div class="dropdown-menu" aria-labelledby="count-button">
          <a class="dropdown-item" href="#"><span class="h3">3</span></a>
          <a class="dropdown-item" href="#"><span class="h3">4</span></a>
          <a class="dropdown-item" href="#"><span class="h3">5</span></a>
        </div>
      </div>

      {# The reset button #}
      <div class="btn-group  my-3 mx-1 p-0 col">
        <button type="button" class="btn btn-primary btn-sm px-2">Reset</button>
      </div>
    </div>
    {# Botton Row start #}

    {# Receptacle Boxes Row -- Start #}
    <div class="row d-flex justify-content-center flex-nowrap mb-2 ">
      {% for i in range(0,count - 1) %}
        <div id="box-{{ i }}" class="box" ondragover="allowDrop" ondrop="dropOnSquare(event);"></div>
      {% endfor %}
    </div>
    {# Receptacle Boxes Row -- End #}

    {# Balls Row -- Start #}
    <div class="row d-flex justify-content-center flex-nowrap">
{#      <table>#}
{#        <tr>#}
          {% for i in range(0,count -1) %}
{#            <td >#}
              <div id="ball-{{ i }}" class="m-1 p-0" draggable="true" ondragstart="dragPiece(event);">
                <i class="fas fa-circle  tac" style="color:{{ colors[loop.index0] }}; font-size: 48px"></i>
              </div>
{#            </td>#}
          {% endfor %}
{#        </tr>#}
{#      </table>#}
    </div>
    {# Balls Row -- End #}
  </div>
  </body>
  </html>
{% endblock %}
